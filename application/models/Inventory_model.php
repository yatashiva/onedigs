<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inventory_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }


    function get_all_inventory_hotel_category($hotel_id)
    {

        $this->db->where('hotle_id',$hotel_id)
        ->order_by('id', 'desc');
        return $this->db->get('room_categories')->result_array();
    }


   function add_update_inventory($params){
       

    }

    function getinventory_for_hotel($hotel_id){
        // $query = "SELECT * FROM `inventory` WHERE hotel_id = 1 and date >= CURDATE() ";
        $query ="SELECT inventory.id as id, cast(date as date) as date,(inventory.total_available - inventory.booked - inventory.blocked) as final_available, inventory.category_id, room_categories.category_name, FROM `inventory` 
        INNER JOIN room_categories on  room_categories.id = inventory.category_id
        WHERE inventory.hotel_id = $hotel_id and date >= CURDATE()";
        return $this->db->query($query)->result_array();
    }
	
	public function getInventoryBetweenDates($hotel_id, $start_date, $end_date){
		$query ="SELECT inventory.id as id, cast(date as date) as date, inventory.total_available, inventory.capacity,inventory.booked,inventory.blocked, inventory.sub_category_id, sub_category.sub_name FROM `inventory` 
        INNER JOIN sub_category on sub_category.id = inventory.sub_category_id
        WHERE inventory.hotel_id = $hotel_id and date between '$start_date' and '$end_date'";
        return $this->db->query($query)->result_array();
	}

    public function getinventorybydateandhotel($date,$hotel_id){
        $subcategory = $this->Room_category_model->get_subcategories_by_hotelid($hotel_id);
        if($subcategory!= '') {
        $this->db->select('i.*,rm.category_name ,sc.sub_name ,');
        $this->db->from('inventory i');
        $this->db->join('room_categories rm', 'rm.id = i.category_id','left');
        $this->db->join('sub_category sc', 'sc.id = i.sub_category_id','left');
        $this->db->where('i.date',$date);
        $this->db->where('i.hotel_id',$hotel_id);
        $this->db->where('sub_category_id is NOT NULL'); 
        $result1=$this->db->get()->result_array();
        } 
        $this->db->select('i.*,rm.category_name ');
        $this->db->from('inventory i');
        $this->db->join('room_categories rm', 'rm.id = i.category_id','left');
        $this->db->where('i.date',$date);
        $this->db->where(['i.hotel_id'=>$hotel_id]);
        $this->db->where('sub_category_id is NULL');   

        $result2=$this->db->get()->result_array();
        $result = array_merge($result1, $result2);      
        
        return $result;

    }

    public function getrowbyid($id){
        $this->db->where('id',$id);
      return  $this->db->get('inventory')->row_array();
        
    }
     
    public function get_max_value(){
       $query = "select max(price) as max from sub_category";
       $result= $this->db->query($query)->row_array();
       return $result;
    }
    public function get_min_value(){
        $query = "select min(price) as min from sub_category";
       $result= $this->db->query($query)->row_array();
        return $result;
    }
    
    public function getBySubcategoryOnDate($hotel_id, $date, $subcategory)
    {
        $this->db->from('inventory i');
        $this->db->where('i.date', $date);
        $this->db->where('i.hotel_id', $hotel_id);
        $this->db->where('i.sub_category_id', $subcategory); 
        $result = $this->db->get()->row_array();
        
        return $result;
	}
	
	function addOrUpdateEntry($params){
		$entry = $this->getBySubcategoryOnDate($params['hotel_id'], $params['date'], $params['sub_category_id']);
		// var_dump($entry);
		if ($entry) {
			$this->db->where('id', $entry['id']);
			$this->db->update('inventory', $params);	
		} else {
			$this->db->insert('inventory', $params);	
		}
	}
    function get_inventory_hotel_category($hotel_id,$category_id,$sub_category_id,$date)
    {
        $query="SELECT booked FROM inventory WHERE hotel_id='$hotel_id' AND category_id='$category_id' AND sub_category_id='$sub_category_id' AND date='$date' ";
        return $this->db ->query($query)->row_array();
    }
    function update_booked($hotel_id,$category_id,$sub_category_id,$booked,$date)
    {
        $query="UPDATE inventory SET booked='$booked' WHERE hotel_id='$hotel_id' AND category_id='$category_id' AND sub_category_id='$sub_category_id' AND date='$date' ";
        return $this->db->query($query);
    }
}
