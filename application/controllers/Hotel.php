<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Hotel extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Hotel_model');
        $this->load->model('Reservation_model');
        $this->load->model('Room_category_model');
        $this->load->model('Vendor_detail_model');
        $this->load->model('Amenity_model');
        $this->load->model('Inventory_model');        
        
    } 

    /*
     * Listing of hotels
     */
    function index()
    {
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
         
          $data['amenities'] = $this->Amenity_model->get_all_amenities();
            if($this->session->userdata('user_type')==1){
                    $data['hotels'] = $this->Hotel_model->get_all_hotels();
            }elseif($this->session->userdata('user_type')==2){
                    $id= $this->session->userdata('login_id');
                    $data['hotels'] = $this->Hotel_model->get_all_hotels($id);
                }
        
        $data['_view'] = 'hotel/index';
        $this->load->view('admin/index',$data);
    }

    /*
     * Adding a new hotel
     */
    function add()
    {   
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
        if($this->session->userdata('user_type')==1 || $this->session->userdata('user_type')==2){
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $date=date('Y-m-d');
            $hotel_pic=$_FILES['hotel_pic']['name'];
            $params = array(
                'hotel_name' => $this->input->post('hotel_name'),
                'hotel_about' => $this->input->post('hotel_about'),
                'hotel_pic' => $_FILES['hotel_pic']['name'],
                'hotel_grade' => $this->input->post('hotel_grade'),
                'total_rooms' => $this->input->post('total_rooms'), 
                "top_hotel"=>$this->input->post('top_hotel'),
                'hotel_address'=>$this->input->post('hotel_address'),               
                'location' => $this->input->post('location'),
                'city' => $this->input->post('city'),
                'state' => $this->input->post('state'),
                'area'=>$this->input->post('area'),
                'hotel_phone_no' => $this->input->post('hotel_phone_no'),
                
                'vendor_name' => $this->input->post('vendor_name'),
                'status' => 1,
                'email'=>$this->input->post('hotel_email'),
            
                'amenities' => implode(",",$this->input->post('amenities'))
              
            );
             $config['upload_path']          = './uploads/';
                $config['allowed_types']        = 'gif|jpg|png|jpeg';
                $config['max_size']             = 10*1024;
               
                $this->load->library('upload', $config);

              if ( ! $this->upload->do_upload('hotel_pic')) {
                $error = array('error' => $this->upload->display_errors()); 
                 print_r ($error);
                    die();
                 }
                    
            $hotel_id = $this->Hotel_model->add_hotel($params);
            $bank=array(
                "hotel_id"=>$hotel_id,
                "account_number"=>$this->input->post('hotel_acc_no'),
                "ifsc"=>$this->input->post('hotel_ifsc_code'),
                "name"=>$this->input->post('fullname'),
                "branch"=>$this->input->post('acc_branch'));
            $map=array(
                "hotel_id"=>$hotel_id,
                "latitude"=>$this->input->post('hotel_latitude'),
                "longitude"=>$this->input->post('hotel_longitude'));
            $bank=array(
                "hotel_id"=>$hotel_id,
                "account_number"=>$this->input->post('hotel_acc_no'),
                "ifsc"=>$this->input->post('hotel_ifsc_code'),
                "name"=>$this->input->post('fullname'),
                "branch"=>$this->input->post('acc_branch'),
                "GST_no"=>$this->input->post('gst_no'),
                "PAN_no"=>$this->input->post('pan_no')
            );


                
				
             $filesCount = count($_FILES['hotel_gallery']['name']);
			 
			 
			 
			 
             $files=implode(",", $_FILES['hotel_gallery']['name']);
            for($i = 0; $i < $filesCount; $i++){
                $_FILES['file']['name']     = $_FILES['hotel_gallery']['name'][$i];
                $_FILES['file']['type']     = $_FILES['hotel_gallery']['type'][$i];
                $_FILES['file']['tmp_name'] = $_FILES['hotel_gallery']['tmp_name'][$i];
                $_FILES['file']['error']     = $_FILES['hotel_gallery']['error'][$i];
                $_FILES['file']['size']     = $_FILES['hotel_gallery']['size'][$i];
                
                // File upload configuration
                // $uploadPath = 'commonfiles/'.$hotel_id.'/';
                // if(!is_dir($uploadPath)){
                //     mkdir('commonfiles/'.$hotel_id.'/');
                // }
                $uploadPath = 'gallery/'.$hotel_id.'/commonfiles'.'/';
                if(!is_dir($uploadPath)){
                    mkdir($uploadPath,0777,true);
                }
                $config['upload_path'] = $uploadPath;
                $config['allowed_types'] = 'jpg|jpeg|png|gif';
                
                // Load and initialize upload library
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                
                // Upload file to server
                $this->upload->do_upload('file');
            }
			
 $gallery=array(
                "hotel_id"=>$hotel_id,
                "gallery"=>$files);
 $policy=array(
                "hotel_id"=>$hotel_id,
                "policy"=>$this->input->post('hotel_policy')
                );
 $cancellation_policy=array(
                "hotel_id"=>$hotel_id,
                "cancellation_policy"=>$this->input->post('hotel_cancel_policy'));
 $option=array(
                "hotel_id"=>$hotel_id,
                "pay_at_hotel"=>$this->input->post('pay_at_hotel'));


              $this->Hotel_model->add_bank_account($bank);
              $this->Hotel_model->add_map($map);
              $this->Hotel_model->add_gallery($gallery);
              $this->Hotel_model->add_policy($policy);
              $this->Hotel_model->add_cancellation_policy($cancellation_policy);
              $this->Hotel_model->add_option($option);
                $num =  $this->input->post('tid');
               // print_r ($_POST);
// for($i=0;$i<=$num;$i++)
// {

//      $tax=array(   
//         'hotel_id'=>$hotel_id,
//         'min'       => $this->input->post('min'.$i),
//         'max '   => $this->input->post('max'.$i),
//         'tax' => $this->input->post('tax'.$i));
//      //print_r($tax);

// $this->Hotel_model->add_tax($tax);
// }

            redirect('hotel/index');
        

        }
        else
        {   
            $this->load->model('Amenity_model');
        $data['amenities'] = $this->Amenity_model->get_all_amenities();   
        $data['vendors'] = $this->Vendor_detail_model->get_all_vendor_details();         
              
            $data['_view'] = 'hotel/add';
            $this->load->view('admin/index',$data);
        }
    }else{
        show_error('you are not permitted to access this page');
    }
    }  

	
	 /*
     * Adding a new hotel
     */
    function add2()
    {   
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
        if($this->session->userdata('user_type')==1 || $this->session->userdata('user_type')==2){
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $date=date('Y-m-d');
            $hotel_pic=$_FILES['hotel_pic']['name'];
            $params = array(
                'hotel_name' => $this->input->post('hotel_name'),
                'hotel_about' => $this->input->post('hotel_about'),
                'hotel_pic' => $_FILES['hotel_pic']['name'],
                'hotel_grade' => $this->input->post('hotel_grade'),
                'total_rooms' => $this->input->post('total_rooms'), 
                'hotel_address'=>$this->input->post('hotel_address'),               
                'location' => $this->input->post('location'),
                'city' => $this->input->post('city'),
                'state' => $this->input->post('state'),
                'area'=>$this->input->post('area'),
                'hotel_phone_no' => $this->input->post('hotel_phone_no'),
                'hotel_about' => $this->input->post('hotel_about'),
                'vendor_name' => $this->input->post('vendor_name'),
                'status' => 1,
                'email'=>$this->input->post('hotel_email'),
            
                'amenities' => implode(",",$this->input->post('amenities'))
              
            );
             $config['upload_path']          = './uploads/';
                $config['allowed_types']        = 'gif|jpg|png|jpeg';
                $config['max_size']             = 10*1024;
               
                $this->load->library('upload', $config);

              if ( ! $this->upload->do_upload('hotel_pic')) {
                $error = array('error' => $this->upload->display_errors()); 
                 print_r ($error);
                    die();
                 }
                    
            $hotel_id = $this->Hotel_model->add_hotel($params);
            $bank=array(
                "hotel_id"=>$hotel_id,
                "account_number"=>$this->input->post('hotel_acc_no'),
                "ifsc"=>$this->input->post('hotel_ifsc_code'),
                "name"=>$this->input->post('fullname'),
                "branch"=>$this->input->post('acc_branch'));
            $map=array(
                "hotel_id"=>$hotel_id,
                "latitude"=>$this->input->post('hotel_latitude'),
                "longitude"=>$this->input->post('hotel_longitude'));
            $bank=array(
                "hotel_id"=>$hotel_id,
                "account_number"=>$this->input->post('hotel_acc_no'),
                "ifsc"=>$this->input->post('hotel_ifsc_code'),
                "name"=>$this->input->post('fullname'),
                "branch"=>$this->input->post('acc_branch'));


                
				
             $filesCount = count($_FILES['hotel_gallery']['name']);
			 
			 
			 
			 
             $files=implode(",", $_FILES['hotel_gallery']['name']);
            for($i = 0; $i < $filesCount; $i++){
                $_FILES['file']['name']     = $_FILES['hotel_gallery']['name'][$i];
                $_FILES['file']['type']     = $_FILES['hotel_gallery']['type'][$i];
                $_FILES['file']['tmp_name'] = $_FILES['hotel_gallery']['tmp_name'][$i];
                $_FILES['file']['error']     = $_FILES['hotel_gallery']['error'][$i];
                $_FILES['file']['size']     = $_FILES['hotel_gallery']['size'][$i];
                
                // File upload configuration
                // $uploadPath = 'commonfiles/'.$hotel_id.'/';
                // if(!is_dir($uploadPath)){
                //     mkdir('commonfiles/'.$hotel_id.'/');
                // }
                $uploadPath = 'gallery/'.$hotel_id.'/commonfiles'.'/';
                if(!is_dir($uploadPath)){
                    mkdir($uploadPath,0777,true);
                }
                $config['upload_path'] = $uploadPath;
                $config['allowed_types'] = 'jpg|jpeg|png|gif';
                
                // Load and initialize upload library
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                
                // Upload file to server
                $this->upload->do_upload('file');
            }
			
 $gallery=array(
                "hotel_id"=>$hotel_id,
                "gallery"=>$files);
 $policy=array(
                "hotel_id"=>$hotel_id,
                "policy"=>$this->input->post('hotel_policy')
                );
 $cancellation_policy=array(
                "hotel_id"=>$hotel_id,
                "cancellation_policy"=>$this->input->post('hotel_cancel_policy'));
 $option=array(
                "hotel_id"=>$id,
                "pay_at_hotel"=>$this->input->post('pay_at_hotel'),
                "free_cancelation"=>$this->input->post('free_cancelation'),
                "couple_friendly"=>$this->input->post('couple_friendly'));


              $this->Hotel_model->add_bank_account($bank);
              $this->Hotel_model->add_map($map);
              $this->Hotel_model->add_gallery($gallery);
              $this->Hotel_model->add_policy($policy);
              $this->Hotel_model->add_cancellation_policy($cancellation_policy);
              $this->Hotel_model->add_option($option);
                $num =  $this->input->post('tid');
               // print_r ($_POST);
// for($i=0;$i<=$num;$i++)
// {

//      $tax=array(   
//         'hotel_id'=>$hotel_id,
//         'min'       => $this->input->post('min'.$i),
//         'max '   => $this->input->post('max'.$i),
//         'tax' => $this->input->post('tax'.$i));
//      //print_r($tax);

// $this->Hotel_model->add_tax($tax);
// }

            redirect('hotel/index');
        

        }
        else
        {   
            $this->load->model('Amenity_model');
        $data['amenities'] = $this->Amenity_model->get_all_amenities();   
        $data['vendors'] = $this->Vendor_detail_model->get_all_vendor_details();         
              
            $data['_view'] = 'hotel/add2';
            $this->load->view('admin/index',$data);
        }
    }else{
        show_error('you are not permitted to access this page');
    }
    }  
	
	
    /*
     * Editing a hotel
     */
    function edit($id)
    {   
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
        if($this->session->userdata('user_type')==1 || $this->session->userdata('user_type')==2){
        // check if the hotel exists before trying to edit it
        $this->load->model('Amenity_model');
        $data['hotel'] = $this->Hotel_model->get_hotel($id);
        $data['gallery'] = $this->Hotel_model->get_common_pics($id);
        $data['bankdetails'] = $this->Hotel_model->get_bankdetails($id);
        $data['latlong'] = $this->Hotel_model->get_latlong($id);
        $data['policies'] = $this->Hotel_model->get_policies($id);
        $data['cancellation'] = $this->Hotel_model->get_cancellation_policies($id);
        $data['payathotel'] = $this->Hotel_model->get_pay_at_hotel($id);
        // $data['taxes'] = $this->Hotel_model->get_taxes($id);
        $data['amenities'] = $this->Amenity_model->get_all_amenities();
        $data['vendors'] = $this->Vendor_detail_model->get_all_vendor_details();
        // print_r($data);
        // die();
            // var_dump($data);exit;
        //   $pics=$this->Hotel_model->get_common_pics($id);
       // print_r($pics);
       // die();
    //    $new_pics=explode(',',$pics[0]['gallery']);
        if(isset($data['hotel']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $date=date('Y-m-d H:i:s');
                $params = array(
                    'hotel_name' => $this->input->post('hotel_name'),
                    'hotel_about' => $this->input->post('hotel_about'),
                    'hotel_grade' => $this->input->post('hotel_grade'),
                    'top_hotel' => $this->input->post('top_hotel'),
                    'total_rooms' => $this->input->post('total_rooms'),                
                    'location' => $this->input->post('location'),
                    'city' => $this->input->post('city'),
                    'state' => $this->input->post('state'),
                    'area'=>$this->input->post('area'),
                    'hotel_phone_no' => $this->input->post('hotel_phone_no'),
                    'vendor_name' => $this->input->post('vendor_name'),
                    'updated_at' => $date,
                    'amenities' => implode(",",$this->input->post('amenities')),
                );
            if(isset($_FILES['hotel_pic']['name']) && $_FILES['hotel_pic']['name']!='')
            { 
             
                $hotel_pic=$_FILES['hotel_pic']['name'];
                
                $params['hotel_pic']=$hotel_pic;
                $config['upload_path']          = './uploads/';
                $config['allowed_types']        = 'gif|jpg|png';
                $config['max_size']             = 10*1024;

                $this->load->library('upload', $config);
                 $this->upload->do_upload('hotel_pic');
            }
             $bank=array(
                "hotel_id"=>$id,
                "account_number"=>$this->input->post('hotel_acc_no'),
                "ifsc"=>$this->input->post('hotel_ifsc_code'),
                "name"=>$this->input->post('fullname'),
                "branch"=>$this->input->post('acc_branch'),
                "GST_no"=>$this->input->post('gst_no'),
                "PAN_no"=>$this->input->post('pan_no')
            );
                $this->Hotel_model->update_bank_account($id,$bank);
                
            $map=array(
                "hotel_id"=>$id,
                "latitude"=>$this->input->post('hotel_latitude'),
                "longitude"=>$this->input->post('hotel_longitude'));
        
            if(count($_FILES['hotel_gallery']['name'])> 0 && $_FILES['hotel_gallery']['name'][0]!='' ){
             $filesCount = count($_FILES['hotel_gallery']['name']);
            
             $files =implode(",", $_FILES['hotel_gallery']['name']);
            for($i = 0; $i < $filesCount; $i++){
                $_FILES['file']['name']     = $_FILES['hotel_gallery']['name'][$i];
                $_FILES['file']['type']     = $_FILES['hotel_gallery']['type'][$i];
                $_FILES['file']['tmp_name'] = $_FILES['hotel_gallery']['tmp_name'][$i];
                $_FILES['file']['error']     = $_FILES['hotel_gallery']['error'][$i];
                $_FILES['file']['size']     = $_FILES['hotel_gallery']['size'][$i];
                
                // File upload configuration
                $uploadPath = 'gallery/'.$id.'/commonfiles'.'/';
                // echo $uploadPath;
                if(!is_dir($uploadPath)){
                   mkdir($uploadPath,0777,true);
                    // echo "created";die;
                }
                $config['upload_path'] = $uploadPath;
                $config['allowed_types'] = 'jpg|jpeg|png|gif';
                
                // Load and initialize upload library
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                
                // Upload file to server
                $this->upload->do_upload('file');
                // array_push($new_pics, $_FILES['file']['name']);
            }
// $new_pics=implode(',',$new_pics);
//             $gallery=array(
               
//                 "gallery"=>$new_pics);
//               $this->Hotel_model->update_gallery($id,$gallery);

//             }
$gallery=array(
    "hotel_id"=>$id,
    "gallery"=>$files);
  $this->Hotel_model->add_gallery($gallery);

}
 
 $policy=array(
                "hotel_id"=>$id,
                "policy"=>$this->input->post('hotel_policy')
                );
 $cancellation_policy=array(
                "hotel_id"=>$id,
                "cancellation_policy"=>$this->input->post('hotel_cancel_policy'));
 $option=array(
                "hotel_id"=>$id,
                "pay_at_hotel"=>$this->input->post('pay_at_hotel'),
                "free_cancelation"=>$this->input->post('free_cancelation'),
                "couple_friendly"=>$this->input->post('couple_friendly'));


              
              $this->Hotel_model->update_map($id,$map);
              $this->Hotel_model->update_policy($id,$policy);
              $this->Hotel_model->update_cancellation_policy($id,$cancellation_policy);
              $this->Hotel_model->update_option($id,$option);
                $num =  $this->input->post('tid');
               // print_r ($_POST);
               
                // for($i=0;$i<=$num;$i++)
                // {

                //      $tax=array(   
                //         'hotel_id'=>$id,
                //         'id' =>$this->input->post('id'.$i),
                //         'min'=> $this->input->post('min'.$i),
                //         'max'=> $this->input->post('max'.$i),
                //         'tax'=> $this->input->post('tax'.$i));
                //      //print_r($tax);
                          
                // $this->Hotel_model->update_tax($tax);
                // }   
               
                $this->Hotel_model->update_hotel($id,$params);    
                // echo $this->db->last_query();exit;   
                redirect('hotel/index');
            }
            else
             {  
                $data['_view'] = 'hotel/edit';
                $this->load->view('admin/index',$data);
            }
        }
        else
            show_error('The hotel you are trying to edit does not exist.');
        }else{
            show_error('you are not permitted to access this page');
        }
    }

    /*
     * Deleting hotel
     */
    function remove($id)
    {
        $hotel = $this->Hotel_model->get_hotel($id);

        // check if the hotel exists before trying to delete it
        if(isset($hotel['id']))
        {
            $this->Hotel_model->delete_hotel($id);
            redirect('hotel/index');
        }
        else
            show_error('The hotel you are trying to delete does not exist.');
    }


     function status($id)
    {
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
        if($this->session->userdata('user_type')==1 || $this->session->userdata('user_type')==2){
        $hotel = $this->Hotel_model->get_hotel($id);
        
        // check if the hotel exists before trying to delete it
        if(isset($hotel['id']))
        {
            if($hotel['status']==1)
            {
                echo "hello";
                $params=array('status'=>0);
            }
            else
            {
                 $params=array('status'=>1);
            }

           $this->Hotel_model->update_hotel($id,$params);   
            redirect('hotel/index');
        }
        else
            show_error('The hotel you are trying to delete does not exist.');
        }else{
            show_error('you are not permitted to access this page');
        }
    }
    

    // public function inventory(){

    //     $date=strtotime(date('Y-m-d'));
    //    for($i=0;$i<30;$i++) {
    //       $dates[] = date('Y-m-d',strtotime('+'.$i.'days',$date));
    //    }

    //    $hotels = $this->Hotel_model->get_all_hotels();
    //    foreach($hotels as $hot){
    //  $categories= $this->Room_category_model->get_room_categories_by_hotel_id($hot['id']);
    //  foreach($categories as $cat){
    //    foreach($dates as $d){
    //     $avalbydate = $this->Reservation_model->get_avaliability_by_date($cat['id'],$d);
    //     if($avalbydate!=null){
    //     $params = array(
            
    //         'hotel_id' => $avalbydate['hotel_id'],
    //         'category_id' =>  $avalbydate['category_id'],
    //         'date' => $d,
    //         'availability' => $avalbydate['availability'],
    //     );
        
    //     $id=$this->Inventory_model->add_update_inventory($params);
       
    //     }elseif($avalbydate==null){
    //     $params = array(
            
    //         'hotel_id' => $hot['id'],
    //         'category_id' =>  $cat['id'],
    //         'date' => $d,
    //         'availability' => $cat['no_of_rooms'],
    //     );
        
    //     $id=$this->Inventory_model->add_update_inventory($params);

    // }

    //    }
    // }
    // }

    // }

    function search()
    {   
        // $this->load->library('../controllers/inventory');
       
        if(isset($_POST) && count($_POST) > 0)  {   
            
                
			$location=explode(', ',$this->input->get('location'));
			$count = count($location);
			$i= $count-3;
			// var_dump($count);die;        
			$arr=explode(' - ',$this->input->get('daterange'));
			$rooms=explode(',',$this->input->get('rooms'));
			$room = preg_replace('/\D/', '', $rooms[0]);
			// $guest = preg_replace('/\D/', '', $rooms[1]);
			$adults = preg_replace('/\D/', '', $rooms[1]);
			$children = preg_replace('/\D/', '', $rooms[2]);
			// $guests = (int)$adults+(int)$children;
            $guests=(int)$adults;
			$ratings=$this->input->post('rating');
			$pricerange=$this->input->post('pricerange');
            $price=explode(' - ',$pricerange);
            $original=$this->input->post('original');
            if($original == 1)
            {
			$min=$price[0];
            $max=$price[1];
            }
            else{
                $min=$this->input->post('min');
                $max=$this->input->post('max');

            }
			 $amen=$this->input->post('type');
			 $sort=$this->input->post('sort');
			if($ratings==array())
			{
				  $params = array(            
						'location' => $location[$i],
						'start' => $arr[0],
						'end' => $arr[1], 
						'rooms' => $room,
						'guests' => $guests,
						'min'=>$min,
						'max'=>$max,
						'sort'=>$sort);
					$rating="";

				$data1['hotels'] = $this->Hotel_model->get_hotels_ajax($params);
          
			}
			else
			{
				$rating=implode(',', $this->input->post('rating'));
				//     if(!empty($amenities))
				//     {
				//     $amenities=implode(',', $this->input->post('amenities'));
				// }
				$params = array(            
					'location' => $location[$i],
					'start' => $arr[0],
					'end' => $arr[1], 
					'rooms' => $room,
					'guests' => $guests,
					'rating'=>$rating,
					 'min'=>$min,
					 'max'=>$max,
					 'sort'=>$sort                
				);

				$data1['hotels'] = $this->Hotel_model->get_hotels_ajaxSearch($params);

			}
            
            if($amen==array())
            {
                 $data['hotels']=$data1['hotels'];
                 $type="";
            }
            else
            {
            $data['hotels']=array();
            $type=implode(',', $this->input->post('type'));
            foreach($data1['hotels'] as $row)
            {
                $hotel_amenities=explode(',',$row['amenities']);
                // print_r ($hotel_amenities);
                // print_r($amenities);
                // print_r(array_intersect($amenities, $hotel_amenities));
                if( count(array_intersect($amen, $hotel_amenities)) == count($amen))
                {
					array_push($data['hotels'], $row);
                }
            }
        }
    

        
        $data['count'] = count($data['hotels']);
        $data['location'] = $this->input->get('location');
        $data['date_range']=$this->input->get('daterange');
        $data['start'] =$params['start'];
        $data['end'] =$params['end'];       
        $data['room'] =$room;
        $data['original']=$original;
        // $data['guest'] =$guest;    
        $data['adults'] =$adults; 
        $data['children'] =$children;     
        $data['rooms']=$this->input->get('rooms');
        $data['rating']=$rating;
        $data['type']=$type;
        $this->load->model('Amenity_model');
		$data['amenities'] = $this->Amenity_model->get_all_amenities();  
         $data['areas']=$this->Hotel_model->popular_areas($location[$i]);
        if($data['hotels'] == NULL)
        {
			//$data1['hotels'] = $this->Hotel_model->get_hotels($params);
            $max = '';
            $min = '';
            foreach($data['hotels'] as $k)
            {
				if($k['min_price']>$max)
                {
					$max = $k['min_price'];
                    $data['max'] = $max;
                }
            } 
                $s=0;
                    foreach($data['hotels'] as $k)
                    {
                       // echo $k['id'];print_r($k);
                        if($k['id']>0)
                        {
                            $htl['gal']=$this->Hotel_model->get_common_pics($k['id']);
                            $htl['options']=$this->Hotel_model->get_hotel_options($k['id']);
                           // $max = $k['min_price'];
                            $data['hotels'][$s]['gall'] = $htl['gal'];
                            $data['hotels'][$s]['options']=$htl['options'];
                        }
                        $s++;
                    } 
            
            foreach($data['hotels'] as $k)
            {
				if($min == ''||$min ==null){
					$min =$k['min_price'];
                }
                elseif($k['min_price']<$min)
                {
                        $min = $k['min_price'];
                }
                $data['min'] = $min;
            } 
            
            $max_value = $this->Inventory_model->get_max_value();
            $data['max_value']=$max_value['max'];

            $min_value = $this->Inventory_model->get_min_value();
            $data['min_value']=$min_value['min'];
            $data['max_htPrice'] = $this->Hotel_model->get_max_price_filter();
            $data['min_htPrice'] = $this->Hotel_model->get_min_price_filter();

            $this->load->view('frontend/in',$data);
        }
        else
        {
                    //echo json_encode($data);  
                    $max = '';
                    $min = '';
                    foreach($data['hotels'] as $k)
                    {
                        if($k['min_price']>$max)
                        {
                        $max = $k['min_price'];
                        $data['max'] = $max;
                        }
                    } 
                   $s=0;
                    foreach($data['hotels'] as $k)
                    {
                       // echo $k['id'];print_r($k);
                        if($k['id']>0)
                        {
                            $htl['gal']=$this->Hotel_model->get_common_pics($k['id']);
                            $htl['options']=$this->Hotel_model->get_hotel_options($k['id']);
                           // $max = $k['min_price'];
                            $data['hotels'][$s]['gall'] = $htl['gal'];
                            $data['hotels'][$s]['options']=$htl['options'];
                        }
                    } 
                    foreach($data['hotels'] as $k)
                    {
                        if($min == ''||$min ==null){
                            $min =$k['min_price'];
                        }
                       elseif($k['min_price']<$min)
                        {
                        $min = $k['min_price'];
                     
                        }
                        $data['min'] = $min;
                        
                    } 
                        $max_value = $this->Inventory_model->get_max_value();
                        $data['max_value']=$max_value['max'];

                        $min_value = $this->Inventory_model->get_min_value();
                        $data['min_value']=$min_value['min'];
                        // var_dump($data);die;
                        $data['max_htPrice'] = $this->Hotel_model->get_max_price_filter();
                        $data['min_htPrice'] = $this->Hotel_model->get_min_price_filter();

                    $this->load->view('frontend/in',$data);
                }

			}
			elseif(isset($_GET) && count($_GET) > 0)     
            {                
				$location=explode(', ',$this->input->get('location'));
				$count = count($location);
				$i= $count-3;
				// var_dump($count);die;        
				$arr=explode(' - ',$this->input->get('daterange'));
				$rooms=explode(',',$this->input->get('rooms'));
				// $room = preg_replace('/\D/', '', $rooms[0]);
				// $guest = preg_replace('/\D/', '', $rooms[1]);
				// $adults = preg_replace('/\D/', '', $rooms[1]);
				// $children = preg_replace('/\D/', '', $rooms[2]);
                 if(count($rooms)==3)
                {
                $room = preg_replace('/\D/', '', $rooms[0]);

                // $guest = preg_replace('/\D/', '', $rooms[1]);
              
                $adults = preg_replace('/\D/', '', $rooms[1]);
                $children = preg_replace('/\D/', '', $rooms[2]);
            }
            else
            {
                $array = str_split(preg_replace('/\D/', '', $rooms[0]));
                $room=$array[0];
                $adults=$array[1];
                $children=$array[2];
                // print_r($array);
                // die();
            }
				// $guests = (int)$adults+(int)$children;
            $guests=(int)$adults;
				$rm = $room.' Rooms,'.$guests.' Guests';
						$params = array(            
							'location' => $location[$i],
							'start' => $arr[0],
							'end' => $arr[1], 
							'rooms' => $room,
							'guests' => $adults,
							
						);
					//   var_dump($params);die;

				$data['hotels'] = $this->Hotel_model->get_hotels_location($params);
				 // var_dump($data['hotels']);die;
				$data['count'] = count($data['hotels']);
				$data['location'] = $this->input->get('location');
				$data['date_range']=$this->input->get('daterange');
				$data['start'] =$params['start'];
				$data['end'] =$params['end'];       
				$data['room'] =$room;
				// $data['guest'] =$guest;        
				// $data['rooms']=$this->input->get('rooms');
				$data['adults'] =$adults; 
				$data['children'] =$children;        

				$data['rooms']=$rm;
				$this->load->model('Amenity_model');
				$data['amenities'] = $this->Amenity_model->get_all_amenities();  
                $data['areas']=$this->Hotel_model->popular_areas($location[$i]);
                // print_r($data['areas']);
                // echo $this->db->last_query();
                // die;
                
				if($data['hotels'] == NULL)
                {
                    $max = '';
                    $min = '';
                    foreach($data['hotels'] as $k)
                    {
                        if($k['min_price']>$max)
                        {
                        $max = $k['min_price'];
                        $data['max'] = $max;
                        }
                    } 
                    $s=0;
                    foreach($data['hotels'] as $k)
                    {
                       // echo $k['id'];print_r($k);
                        if($k['id']>0)
                        {
                            $htl['gal']=$this->Hotel_model->get_common_pics($k['id']);
                            $htl['options']=$this->Hotel_model->get_hotel_options($k['id']);
                           // $max = $k['min_price'];
                            $data['hotels'][$s]['gall'] = $htl['gal'];
                            $data['hotels'][$s]['options']=$htl['options'];
                        }
                        $s++;
                    } 
                    foreach($data['hotels'] as $k)
                    {
                        if($min == ''||$min ==null){
                            $min =$k['min_price'];
                        }
                       elseif($k['min_price']<$min)
                        {
                        $min = $k['min_price'];
                     
                        }
                        $data['min'] = $min;
                    } 
                    $max_value = $this->Inventory_model->get_max_value();
                        $data['max_value']=$max_value['max'];

                        $min_value = $this->Inventory_model->get_min_value();
                        $data['min_value']=$min_value['min'];
                    //$data1['hotels'] = $this->Hotel_model->get_hotels($params);
                    $data['max_htPrice'] = $this->Hotel_model->get_max_price_filter();
                    $data['min_htPrice'] = $this->Hotel_model->get_min_price_filter();

                    $this->load->view('frontend/in',$data);
                }
            else
                {
                     $max = '';
                    $min = '';
                    foreach($data['hotels'] as $k)
                    {
                        if($k['min_price']>$max)
                        {
                        $max = $k['min_price'];
                        $data['max'] = $max;
                        }
                    } 
                    $s=0;
                    foreach($data['hotels'] as $k)
                    {
                       // echo $k['id'];print_r($k);
                        if($k['id']>0)
                        {
                            $htl['gal']=$this->Hotel_model->get_common_pics($k['id']);
                            $htl['options']=$this->Hotel_model->get_hotel_options($k['id']);
                           // $max = $k['min_price'];
                            $data['hotels'][$s]['gall'] = $htl['gal'];
                            $data['hotels'][$s]['options']=$htl['options'];
                        }
                        $s++;
                    } 
                    foreach($data['hotels'] as $k)
                    {
                        if($min == ''||$min ==null){
                            $min =$k['min_price'];
                        }
                       elseif($k['min_price']<$min)
                        {
                        $min = $k['min_price'];
                     
                        }
                        $data['min'] = $min;
                    } 
                    $max_value = $this->Inventory_model->get_max_value();
                        $data['max_value']=$max_value['max'];

                        $min_value = $this->Inventory_model->get_min_value();
                        $data['min_value']=$min_value['min'];
                        // var_dump($data);die;
                        $data['max_htPrice'] = $this->Hotel_model->get_max_price_filter();
                        $data['min_htPrice'] = $this->Hotel_model->get_min_price_filter();

                    $this->load->view('frontend/in',$data);
                }
        }
        else
        {
            redirect('home/index');
        }
       
    } 
    
    function get_hotel_by_id($id,$daterange,$rooms,$adults,$children=0)
    {
         $daterange = str_replace('%20',' ',$daterange); 
    
     $ex=explode(' - ',$daterange);
     $ix=implode(' To ',$ex);

            $params = array(            
                'id' => $id
            );
            if(isset($id))     
       {  
        $htl['hotels'] = $this->Hotel_model->getHotels($params);
        $categories = $this->Hotel_model->getCategories($params);
        $subcategories = $this->Hotel_model->getSubCategories($params);
        // print_r($subcategories);
        // echo "<br/>";
        // $htl['categories'] = $this->Hotel_model->getCategories($params);
        // $htl['subcategories'] = $this->Hotel_model->getSubCategories($params);
        $htl['reviews'] = $this->Hotel_model->getUserratings($params);
        $htl['cord']=$this->Hotel_model->getCoordinates($params);
        $htl['gal']=$this->Hotel_model->get_common_pics($id);
        // $htl['category']= array_merge($categories,$subcategories);
        $htl['category']= $subcategories;
        // print_r($htl['category']);die;
        // foreach ($htl['category'] as $key) {
        //     $params =  array('' => );
        // }
        // $htl['categories'] = $htl['category'];
        // foreach ($array as $element) {
        //     $htl['categories'][$element['category_id']][] = $element;
        // }

        // var_dump($htl['categories']);die;

        $htl['daterange']=$daterange;
            $htl['rooms']=$rooms;
            $htl['adults']=$adults;
            $htl['children']=$children;
     // var_dump($htl['category']);
     // die;
        foreach ($htl['category'] as $key) {
            if(array_key_exists("sub_category_id",$key)){
                $params =  array('hotel_id' =>$key['hotel_id'],'category_id'=>$key['category_id'],'sub_category_id'=>$key['sub_category_id'],'date'=>$daterange ,'rooms'=>$rooms,'adults'=>$adults);
               //  echo "hai";
               // print_r($params);
               // echo "<br/>";
               
            }else{
                $params =  array('hotel_id' =>$key['hotel_id'],'category_id'=>$key['category_id'],'date'=>$daterange ,'rooms'=>$rooms,'adults'=>$adults);
               
               }

               $res = $this->Hotel_model->get_room_availability($params);
               // print_r($res);
               if($res == 'true'){
                $category[] =$key;
               }
               // else
               // {
               // $category=array();
               // }
            }
            // die;
        }
        // print_r($category);
        // die();
       if(empty($category))
       {
        $category=array();
       }
        $cat=$this->_group_by($category,'category_name');
        // echo "<hr>";
        // var_dump($cat);die;
        $htl['categories'] = $cat; 
            $this->load->model('Amenity_model');
            $htl['amenities']=$this->Amenity_model->get_all_amenities();
        $this->load->view('frontend/booking1',$htl);
      
        }
    //     else
    //    {
    //      redirect('home/index');
    //    }
            
    //     }

    function promotions()
    {
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
        $data['_view'] = 'admin/promotions2';
        $this->load->view('admin/index',$data);
    }
    function offers()
    {
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 

      
        $this->load->view('admin/offers');
    }
    // function remove_picture($id)
    // {
       //  $image=$this->input->post('image');
       // $pics=$this->Hotel_model->get_common_pics($id);
       // print_r($pics);
       // die();
//        $pic=explode(',',$pics[0]['gallery']);
//        $new_pics=array();
//        $count=count($pic);
//        for($i=0; $i < $count; $i++)
//        {
//         if($pic[$i]!=$image)
//         {
// array_push($new_pics, $pic[$i]);
//         }
//        }
       
//        $files=implode(',', $new_pics);
//         $gallery=array(
                
//                 "gallery"=>$files);
//        $this->Hotel_model->update_gallery($id,$gallery);
         function remove_picture()
    {
         $id=$this->input->post('id');
        $this->Hotel_model->remove_picture($id);
    }
    // }
    function _group_by($array, $key) {
        $return = array();
        foreach($array as $val) {
            $return[$val[$key]][] = $val;
        }
        return $return;
    }
    
    function get_hotel_by_id_sample($id,$daterange,$rooms,$adults,$children=0)
    {
         $daterange = str_replace('%20',' ',$daterange); 
    
     $ex=explode(' - ',$daterange);
     $ix=implode(' To ',$ex);

            $params = array(            
                'id' => $id
            );
            if(isset($id))     
       {  
        $htl['hotels'] = $this->Hotel_model->getHotels($params);
        $categories = $this->Hotel_model->getCategories($params);
        $subcategories = $this->Hotel_model->getSubCategories($params);
        
        $htl['hotel_id'] = $id;
        $htl['reviews'] = $this->Hotel_model->getUserratings($params);
        $htl['cord']=$this->Hotel_model->getCoordinates($params);
        $htl['gal']=$this->Hotel_model->get_common_pics($id);
        // $htl['category']= array_merge($categories,$subcategories);
        $htl['category']= $subcategories;
        // print_r($htl['category']);die;
        // foreach ($htl['category'] as $key) {
        //     $params =  array('' => );
        // }
        // $htl['categories'] = $htl['category'];
        // foreach ($array as $element) {
        //     $htl['categories'][$element['category_id']][] = $element;
        // }

        // var_dump($htl['categories']);die;
			
			$htl['daterange']=$daterange;
            $htl['rooms']=$rooms;
            $htl['adults']=$adults;
            $htl['children']=$children;
        // var_dump($htl['category']);
        // foreach ($htl['category'] as $key) {
        //     if(array_key_exists("sub_category_id",$key)){
        //         $params =  array('hotel_id' =>$key['hotel_id'],'category_id'=>$key['category_id'],'sub_category_id'=>$key['sub_category_id'],'date'=>$daterange ,'rooms'=>$rooms,'adults'=>$adults);
        //     }else{
        //         $params =  array('hotel_id' =>$key['hotel_id'],'category_id'=>$key['category_id'],'date'=>$daterange ,'rooms'=>$rooms,'adults'=>$adults);
        //        }
        //        $res = $this->Hotel_model->get_room_availability($params);
        //        if($res == 'true'){
        //         $category[] =$key;
        //        }
        //     }
        // }
        // var_dump($category);
        $cat=$this->_group_by($htl['category'],'category_name');
        // echo "<hr>";
        // var_dump($cat);die;
        $htl['categories'] = $cat; 
        // print_r($htl['categories']);
        // die();
            $this->load->model('Amenity_model');
            $htl['amenities']=$this->Amenity_model->get_all_amenities();
            $this->load->view('frontend/booking1', $htl);
      
        }
	}
	
	// ajax only function
	function get_room_type_availability($id, $daterange, $catid, $subid, $rooms, $adults)
	{
		// restore spaces in daterange string
		$daterange = str_replace("%20", " ", $daterange);
		
		$params=array('hotel_id' => $id, 'category_id'=>$catid,'sub_category_id'=>$subid,
				'date'=> $daterange ,'rooms'=> $rooms,'adults' => $adults);
		$res = $this->Hotel_model->get_room_availability_sample($params);
		
		echo $res;
	}
	


function terms_conditions()
 { 
	 $this->load->view('frontend/terms_conditions');
 }

 function feedback_contact()
 { 
	 $this->load->view('frontend/f_form');
 }
 
 function privacy()
 {
	 $this->load->view('frontend/privacy');
 }
 
 function aboutus()
 {
	 $this->load->view('frontend/aboutus');
 }
 
 function faq()
 {
	 $this->load->view('frontend/faq');
 }
 
 function career()
 {
	 $this->load->view('frontend/career');
 }
 function feedback()
 {
	 $this->load->view('frontend/feedback');
 }
}
