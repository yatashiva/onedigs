<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inventory extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Hotel_model');
        $this->load->model('Inventory_model');        
        $this->load->model('Reservation_model');
        $this->load->model('Room_category_model');
        $this->load->model('Vendor_detail_model');
    } 

    /*
     * Listing of inventory
     */
    function index()
    {
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 

        
    }

    function inventorydisplay($hotel_id){
        if (!$this->session->userdata('is_logged_in')) {
            redirect('login_user/login');
        } 
		
		$start_date = empty($_GET['start_date']) ?  date('Y-m-d') : $_GET['start_date'];
		
		if(empty($start_date) ){
			$start_date = date('Y-m-d');
		}
		$end_date = date('Y-m-d', strtotime('+10 days', strtotime($start_date)));
        $inventory = $this->Inventory_model->getInventoryBetweenDates($hotel_id, $start_date, $end_date);
		$subcategories = $this->Room_category_model->get_subcategories_by_hotelid($hotel_id);
		$form_data = array();
		$d = $start_date;
		
		while (strtotime($d) <= strtotime($end_date)) {
			$form_data[$d] = array();
			foreach ($subcategories as $sub) {
				$form_data[$d][$sub['id']] = ['total_available' => 0 , 'booked' => 0, 'blocked' => 0, 'capacity' => 0]; 
			}
			
			$d = date('Y-m-d', strtotime("+1 day", strtotime($d)));
		}
		
		foreach ($inventory as $i) {
			$form_data[$i['date']][$i['sub_category_id']]['total_available'] = $i['total_available'];
			$form_data[$i['date']][$i['sub_category_id']]['capacity'] = $i['capacity'];
			$form_data[$i['date']][$i['sub_category_id']]['booked'] = $i['booked'];
			$form_data[$i['date']][$i['sub_category_id']]['blocked'] = $i['blocked'];
		}
		
		$data['form_data'] = $form_data;
		$data['subcategories'] = $subcategories;
		$data['hotel_id'] = $hotel_id;
		$data['start_date'] = $start_date;
		$data['end_date'] = $end_date;
		$data['hotel_name'] = $this->Hotel_model->get_hotel($hotel_id)['hotel_name'];
		$data['previous'] = date('Y-m-d', strtotime("-11 day", strtotime($start_date)));
		$data['next'] = date('Y-m-d', strtotime("+1 day", strtotime($end_date)));
		$data['_view'] = 'inventory/display';
        $this->load->view('admin/index',$data);
		
    }
    
    function gethotels(){
            if (!$this->session->userdata('is_logged_in')) {
                redirect('login_user/login');
            }

            if($this->session->userdata('user_type')==1){
                $hotelslist= $this->Hotel_model->get_all_hotels();

            }elseif($this->session->userdata('user_type')==2){
            $id= $this->session->userdata('login_id');
            $hotelslist= $this->Hotel_model->get_all_hotels($id);
            }
            $data['hotels'] = $hotelslist;
            $data['_view'] = 'inventory/hotelslist';
            $this->load->view('admin/index',$data);


        }

        function dis(){
            $data['_view'] = 'inventory/new';
            $this->load->view('admin/index',$data);

        }


       public function getinventorydetailsbydate(){

        $date = $_POST['date'];
        $hotel_id = $_POST['hotel_id'];

        $result['details'] = $this->Inventory_model->getinventorybydateandhotel($date,$hotel_id);
        echo json_encode($result);
       }

       
       public function updateinventory($hotel_id)
       {
		    $category = $_GET['category'];
		    $range = $_GET['range'];
		    $start_date = $_GET['start_date'];
		    $dates = array();
		    $d = $start_date;
		    
		 	if($range) {
				$end_date = date('Y-m-d', strtotime('+10 days', strtotime($start_date)));
			} else {
				$end_date = $start_date;
				$dates[0] = $start_date;
			}
       
		
			while ($range  && strtotime($d) <= strtotime($end_date)) {
				array_push($dates, 	$d);
				$d = date('Y-m-d', strtotime("+1 day", strtotime($d)));
				
			}
			
			$parentcategory = $this->Room_category_model->get_sub_room_category($category);
			
			$defaultparams = ['hotel_id' => $hotel_id, 'category_id' => $parentcategory['category_id'], 'capacity' => 0,
							  'sub_category_id' => $category, 'date' => $start_date, 'total_available' => 0, 'blocked' => false,
							  'base_price'  => 0, 'original_price' => 0, 'price' => 0];
							   
			if ($this->input->post()) {
				$dates = array_keys($this->input->post('dates'));
				$available = $this->input->post('available');
				$blocked = $this->input->post('blocked');
				// $base_price = $this->input->post('baseprice');
				// $original_price = $this->input->post('originalprice');
				// $price = $this->input->post('price');
				$capacity = $this->input->post('capacity');
				
				if ($range) {
					foreach ($dates as $d) {
						$params = ['hotel_id' => $hotel_id, 'category_id' => $parentcategory['category_id'], 'capacity' => $capacity,
									'sub_category_id' => $category, 'date' => $d, 'total_available' => $available, 
								    'blocked' => ($blocked != null)
									//, 'base_price' => $base_price, 'original_price' => $original_price, 'price' => $price
									];
						$this->Inventory_model->addOrUpdateEntry($params);
					}
				} else {
					$params = ['hotel_id' => $hotel_id, 'category_id' => $parentcategory['category_id'], 'capacity' => $capacity,
							   'sub_category_id' => $category, 'date' => $start_date, 'total_available' => $available, 'blocked' => ($blocked != null)
							   //,'base_price' => $base_price, 'original_price' => $original_price, 'price' => $price
							   ];
							   
					// var_dump($params);
					$this->Inventory_model->addOrUpdateEntry($params);
				}
				
				//redirect to listing.
				redirect('inventory/inventorydisplay/' . $hotel_id);
			}
			
			$data['range'] = $range;
			$data['hotel_id'] = $hotel_id;
			$data['start_date'] = $start_date;
			$data['dates'] = $dates;
			$data['subcategory'] = $category;
			
			// check if inventory data exists for the date
			if (!$range) {
				$entry = $this->Inventory_model->getBySubcategoryOnDate($hotel_id, $start_date, $category);
				if ($entry) {
					$data['params'] = $entry;
				} else {
					$data['params'] = $defaultparams;
				}
			} else {
				$data['params'] = $defaultparams;
			}
			
			// $data['_view'] = 'inventory/update';
			
			// render update form in modal
			$this->load->view('inventory/update',$data);
       }
       
       public function block(){

        $id= $_POST['id'];
        $value=$this->Inventory_model->getrowbyid($id);

        // var_dump($value);
        if($value['blocked']==0){
            $params['blocked'] = 1;
            $this->db->where('id',$id);
			$this->db->update('inventory',$params);
		
			$result = 'blocked';
			echo $result;
        }elseif($value['blocked']==1){
            $params['blocked'] = 0;

            $this->db->where('id',$id);
			$this->db->update('inventory',$params);
       
			$result = 'unblocked';
			echo $result;
        }
        
       }

        
}
